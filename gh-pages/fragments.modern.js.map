{"version":3,"file":"fragments.modern.js","sources":["../src/program.ts","../src/fragment.ts","../src/rendertarget.ts","../src/renderer.ts"],"sourcesContent":["export const createShader = (\n  gl: WebGLRenderingContext,\n  str: string,\n  type: number\n) => {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, str)\n  gl.compileShader(shader)\n\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n\n  if (!compiled) {\n    const error = gl.getShaderInfoLog(shader)\n    console.error(\"Error compiling shader\", shader, error)\n    gl.deleteShader(shader)\n\n    return null\n  }\n\n  return shader\n}\n\nexport const createProgram = (\n  gl: WebGLRenderingContext,\n  vertexShader: string,\n  fragmentShader: string\n) => {\n  const vs = createShader(gl, vertexShader, gl.VERTEX_SHADER)\n  const fs = createShader(gl, fragmentShader, gl.FRAGMENT_SHADER)\n\n  const program = gl.createProgram()\n  gl.attachShader(program, vs)\n  gl.attachShader(program, fs)\n  gl.linkProgram(program)\n\n  return program\n}\n","import { createProgram } from \"./program\"\nimport { vertexShader, composeFragment } from \"./shaders\"\n\nexport class Fragment {\n  program: WebGLProgram\n  uniforms: object\n  attributes: object\n\n  constructor(gl: WebGLRenderingContext, fragment?: string) {\n    this.attributes = {}\n    this.uniforms = {}\n\n    this.program = createProgram(gl, vertexShader, composeFragment(fragment))\n  }\n\n  getAttribute(gl: WebGLRenderingContext, name: string) {\n    if (!this.attributes[name]) {\n      this.attributes[name] = gl.getAttribLocation(this.program, name)\n    }\n\n    return this.attributes[name]\n  }\n\n  getUniform(gl: WebGLRenderingContext, name: string) {\n    if (!this.uniforms[name]) {\n      this.uniforms[name] = gl.getUniformLocation(this.program, name)\n    }\n\n    return this.uniforms[name]\n  }\n\n  setU1f(gl: WebGLRenderingContext, name: string, x: number) {\n    gl.uniform1f(this.getUniform(gl, name), x)\n  }\n\n  setU2f(gl: WebGLRenderingContext, name: string, x: number, y: number) {\n    gl.uniform2f(this.getUniform(gl, name), x, y)\n  }\n\n  setU2fv(gl: WebGLRenderingContext, name: string, v2: any) {\n    gl.uniform2fv(this.getUniform(gl, name), v2)\n  }\n\n  setU1i(gl: WebGLRenderingContext, name: string, level: number) {\n    gl.uniform1i(this.getUniform(gl, name), level)\n  }\n}\n","export class RenderTarget {\n  texture: WebGLTexture\n  fbo: WebGLFramebuffer\n  width: number\n  height: number\n  level: number\n\n  constructor(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    level: number\n  ) {\n    this.width = 1\n    this.height = 1\n    this.level = level\n\n    this.texture = gl.createTexture()\n    // gl.activeTexture(gl.TEXTURE0 + this.level)\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    const internalFormat = gl.RGBA\n    const border = 0\n    const format = gl.RGBA\n    const type = gl.UNSIGNED_BYTE\n    const data = new Uint8Array([0, 255, 255, 255]) // null\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      this.level,\n      internalFormat,\n      this.width,\n      this.height,\n      border,\n      format,\n      type,\n      data\n    )\n\n    // set the filtering so we don't need mips\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\n    this.fbo = gl.createFramebuffer()\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo)\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      this.level\n    )\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  setSize(gl: WebGLRenderingContext, width: number, height: number) {\n    this.width = width\n    this.height = height\n\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      this.width,\n      this.height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    )\n    gl.bindTexture(gl.TEXTURE_2D, null)\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n}\n","import { Fragment } from \"./fragment\"\nimport { RenderTarget } from \"./rendertarget\"\n\nconst VERSION = \"dev\"\n\ninterface RendererProps {\n  autoClear: boolean\n  autoUpdate: boolean\n}\n\nexport class Renderer {\n  width: number\n  height: number\n  mouse: Float32Array\n  fragments: Fragment[]\n  rendertargets: RenderTarget[]\n  originalImageTexture: RenderTarget\n  quadbuffer: WebGLBuffer\n  currentrt: number\n  loaded: number\n  ready: boolean\n  pause: boolean\n  now: number\n  gl: WebGLRenderingContext\n  props: RendererProps = {\n    autoClear: true,\n    autoUpdate: false,\n  }\n\n  constructor(props = {} as Partial<RendererProps>) {\n    Object.assign(this.props, props)\n\n    // renderer dimensions\n    this.width = 320\n    this.height = 240\n\n    // mouse position\n    this.mouse = new Float32Array(2)\n\n    // fragments & rendertargets\n    this.fragments = []\n    this.rendertargets = []\n\n    // which rendertarget are we using\n    this.currentrt = 0\n\n    // how many fragments got loaded\n    this.loaded = 0\n\n    this.ready = false\n    this.pause = false\n\n    this.now = Date.now()\n\n    if (window.WebGLRenderingContext) {\n      this.init()\n    } else {\n      console.error(\"Your browser doesn't support WebGL\")\n    }\n  }\n\n  private onBlur = () => {\n    this.pause = true\n  }\n\n  private onFocus = () => {\n    this.pause = false\n  }\n\n  private onMove = (e: MouseEvent) => {\n    this.mouse[0] = e.clientX\n    this.mouse[1] = e.clientY\n  }\n\n  private useFragment(fragment: Fragment) {\n    this.gl.useProgram(fragment.program)\n\n    this.gl.enableVertexAttribArray(fragment.getAttribute(this.gl, \"position\"))\n    this.gl.vertexAttribPointer(\n      fragment.getAttribute(this.gl, \"position\"),\n      2,\n      this.gl.FLOAT,\n      false,\n      0,\n      0\n    )\n\n    fragment.setU2f(this.gl, \"iResolution\", this.width, this.height)\n    fragment.setU1f(this.gl, \"iTime\", (Date.now() - this.now) / 1000)\n    fragment.setU2fv(this.gl, \"iMouse\", this.mouse)\n  }\n\n  private init() {\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = this.width\n    canvas.height = this.height\n    canvas.style.display = \"block\"\n    document.body.appendChild(canvas)\n\n    // window.addEventListener(\"blur\", this.onBlur)\n    // window.addEventListener(\"focus\", this.onFocus)\n    window.addEventListener(\"mousemove\", this.onMove)\n\n    this.gl = canvas.getContext(\"webgl\")\n\n    // this.gl.getExtension(\"EXT_color_buffer_float\") // webgl2\n    this.gl.getExtension(\"OES_texture_float\")\n    this.gl.getExtension(\"OES_standard_derivatives\")\n    this.gl.getExtension(\"OES_float_linear\")\n    this.gl.getExtension(\"OES_half_float_linear\")\n\n    if (!this.gl) {\n      console.error(\"Couldn't start WebGL. Try get.webgl.org/troubleshooting\")\n    }\n\n    var args = [\n      `\\n%cfragments%crenderer%c (${VERSION})\\n`,\n      \"background: #00ffff; color: #1A1A1A; font-size: x-small;\",\n      \"background: #1A1A1A; color: #00ffff; font-size: x-small;\",\n      \"background: transparent; color: #999999; font-size: x-small;\",\n    ]\n\n    console.log.apply(console, args)\n\n    // create initial black texture which will be feed into the very first fragment\n    this.originalImageTexture = new RenderTarget(this.gl, 512, 512, 0)\n\n    // create 2 framebuffers so we can ping pong effects around\n    const rt1 = new RenderTarget(this.gl, 512, 512, 1)\n    const rt2 = new RenderTarget(this.gl, 512, 512, 2)\n    this.rendertargets = [rt1, rt2]\n\n    const quad = new Float32Array([-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1])\n    this.quadbuffer = this.gl.createBuffer()\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quadbuffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, quad, this.gl.STATIC_DRAW)\n  }\n\n  public setSize(width: number, height: number) {\n    this.width = width\n    this.height = height\n\n    this.gl.canvas.width = this.width\n    this.gl.canvas.height = this.height\n\n    this.gl.viewport(0, 0, this.width, this.height)\n\n    this.originalImageTexture.setSize(this.gl, this.width, this.height)\n\n    this.rendertargets.forEach((rt) => {\n      rt.setSize(this.gl, this.width, this.height)\n    })\n  }\n\n  // loads external fragment file.frag\n  public loadFragment(url: string) {\n    this.ready = false\n    const index = this.fragments.length\n    this.fragments.push(null)\n    fetch(url)\n      .then((e) => e.text())\n      .then((raw) => this.raw(raw, index))\n  }\n\n  // adds a raw fragment to the renderer\n  public raw(fragment: string, optionalIndex?: number) {\n    this.ready = false\n\n    const frag = new Fragment(this.gl, fragment)\n    if (typeof optionalIndex === \"number\") {\n      this.fragments[optionalIndex] = frag\n    } else {\n      this.fragments.push(frag)\n    }\n    this.loaded++\n\n    if (this.fragments.length === this.loaded) {\n      this.ready = true\n    }\n  }\n\n  public clear(r: number = 0, g: number = 0, b: number = 0, a: number = 1) {\n    this.gl.clearColor(r, g, b, a)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT)\n  }\n\n  private getNext = (current: number) => {\n    return (current + 1) % 2\n  }\n\n  public render() {\n    if (this.ready !== true) return\n    if (this.pause) return\n\n    if (this.props.autoClear) {\n      this.clear()\n    }\n\n    // start with the original image\n    // this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.originalImageTexture.fbo)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.originalImageTexture.texture)\n\n    // loop through each effect we want to apply.\n    for (let i = 0; i < this.fragments.length; ++i) {\n      console.log(\"draw fragment\", i, \"to render target\", i % 2)\n      // Setup to draw into one of the framebuffers.\n      this.gl.bindFramebuffer(\n        this.gl.FRAMEBUFFER,\n        this.rendertargets[i % 2].fbo\n      )\n      this.useFragment(this.fragments[i])\n      this.gl.viewport(0, 0, this.width, this.height) // DO I NEED THIS?\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 6)\n\n      // for the next draw, use the texture we just rendered to.\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.rendertargets[i % 2].texture)\n    }\n\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\n    this.useFragment(this.fragments[this.fragments.length - 1])\n    this.gl.viewport(0, 0, this.width, this.height) // DO I NEED THIS?\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6)\n  }\n}\n\n/*\n// THIS WORKS (1 shader rendering to screen)\n// draw to texture\nthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.rendertargets[0].fbo)\nthis.useFragment(this.fragments[0])\nthis.gl.drawArrays(this.gl.TRIANGLES, 0, 6)\n\n// draw texture to screen\nthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\nthis.gl.bindTexture(this.gl.TEXTURE_2D, this.rendertargets[0].texture)\n\nthis.useFragment(this.fragments[1])\nthis.gl.drawArrays(this.gl.TRIANGLES, 0, 6)\n// this.rendertargets.reverse()\n*/\n"],"names":["createShader","gl","str","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","console","deleteShader","Fragment","constructor","fragment","this","attributes","uniforms","program","vertexShader","fragmentShader","vs","VERTEX_SHADER","fs","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getAttribute","name","getAttribLocation","getUniform","getUniformLocation","setU1f","x","uniform1f","setU2f","y","uniform2f","setU2fv","v2","uniform2fv","setU1i","level","uniform1i","RenderTarget","width","height","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","format","UNSIGNED_BYTE","data","Uint8Array","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setSize","Renderer","props","autoClear","autoUpdate","pause","e","mouse","clientX","clientY","current","Object","assign","Float32Array","fragments","rendertargets","currentrt","loaded","ready","now","Date","window","WebGLRenderingContext","init","useFragment","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","canvas","document","createElement","style","display","body","appendChild","addEventListener","onMove","getContext","getExtension","log","apply","originalImageTexture","rt1","rt2","quad","quadbuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","viewport","forEach","rt","loadFragment","url","index","length","push","fetch","then","text","raw","optionalIndex","frag","clear","r","g","b","a","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","render","i","drawArrays","TRIANGLES"],"mappings":"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"}