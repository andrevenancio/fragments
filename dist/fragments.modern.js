const t=(t,i,e)=>{const s=t.createShader(e);if(t.shaderSource(s,i),t.compileShader(s),!t.getShaderParameter(s,t.COMPILE_STATUS)){const i=t.getShaderInfoLog(s);return console.error("Error compiling shader",s,i),t.deleteShader(s),null}return s};class i{constructor(i,e){this.attributes={},this.uniforms={},this.program=((i,e,s)=>{const r=t(i,"\nattribute vec2 position;\nvoid main() {\n    gl_Position = vec4(position, 0.0, 1.0);\n}",i.VERTEX_SHADER),o=t(i,"\nprecision highp float;\n\nuniform float uTime;\nuniform vec2 uResolution;\nuniform vec2 uMouse;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / uResolution.xy;\n    gl_FragColor = vec4(uv, 0.5 + 0.5 * cos(uTime), 1.0);\n}",i.FRAGMENT_SHADER),h=i.createProgram();return i.attachShader(h,r),i.attachShader(h,o),i.linkProgram(h),h})(i)}getAttribute(t,i){return this.attributes[i]||(this.attributes[i]=t.getAttribLocation(this.program,i)),this.attributes[i]}getUniform(t,i){return this.uniforms[i]||(this.uniforms[i]=t.getUniformLocation(this.program,i)),this.uniforms[i]}setU1f(t,i,e){t.uniform1f(this.getUniform(t,i),e)}setU2f(t,i,e,s){t.uniform2f(this.getUniform(t,i),e,s)}setU2fv(t,i,e){t.uniform2fv(this.getUniform(t,i),e)}setU1i(t,i,e){t.uniform1i(this.getUniform(t,i),e)}}class e{constructor(){this.onBlur=()=>{this.pause=!0},this.onFocus=()=>{this.pause=!1},this.onMove=t=>{this.mouse[0]=t.clientX,this.mouse[1]=t.clientY},this.width=320,this.height=240,this.fragments=[],this.mouse=new Float32Array(2),this.ready=!1,this.pause=!1,this.now=Date.now(),window.WebGLRenderingContext?this.init():console.error("Your browser doesn't support WebGL")}useFragment(t){this.gl.useProgram(t.program),this.gl.enableVertexAttribArray(t.getAttribute(this.gl,"position")),this.gl.vertexAttribPointer(t.getAttribute(this.gl,"position"),2,this.gl.FLOAT,!1,0,0),t.setU2f(this.gl,"uResolution",this.width,this.height),t.setU1f(this.gl,"uTime",(Date.now()-this.now)/1e3),t.setU2fv(this.gl,"uMouse",this.mouse)}init(){const t=document.createElement("canvas");t.width=this.width,t.height=this.height,document.body.appendChild(t),window.addEventListener("blur",this.onBlur),window.addEventListener("focus",this.onFocus),window.addEventListener("mousemove",this.onMove),this.gl=t.getContext("webgl"),this.gl.getExtension("OES_texture_float"),this.gl.getExtension("OES_standard_derivatives"),this.gl.getExtension("OES_float_linear"),this.gl.getExtension("OES_half_float_linear"),this.gl||console.error("Couldn't start WebGL. Try get.webgl.org/troubleshooting");const i=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,i,this.gl.STATIC_DRAW)}setSize(t,i){this.width=t,this.height=i,this.gl.canvas.width=this.width,this.gl.canvas.height=this.height,this.gl.viewport(0,0,this.width,this.height)}loadFragment(t){fetch(t).then(t=>t.text()).then(t=>this.raw(t))}raw(t){this.ready=!1,this.fragments.push(new i(this.gl,t)),this.ready=!0}clear(t=0,i=0,e=0,s=1){this.gl.clearColor(t,i,e,s),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}render(){if(!0===this.ready&&!this.pause){this.clear();for(let t=0;t<this.fragments.length;t++)this.useFragment(this.fragments[t]),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}}}export{e as Renderer};
//# sourceMappingURL=fragments.modern.js.map
